{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGoods","good","setState","prevState","removeGoods","filter","restOfgoods","selectOrRemove","includes","clearSelectedGoods","createTitle","allGoods","length","join","slice","this","className","type","onClick","map","btnText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAOMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,SAACC,GACb,EAAKC,UAAU,SAACC,GAAD,MAAuB,CACpCJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,YAAc,SAACH,GACb,EAAKC,UAAU,SAACC,GAAD,MAAuB,CACpCJ,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAW,OACvDA,IAAgBL,U,EAKtBM,eAAiB,SAACN,GAGhB,OAFmB,EAAKH,MAAMC,cAAcS,SAASP,GAGjD,EAAKG,YAAYH,GACjB,EAAKD,YAAYC,I,EAGvBQ,mBAAqB,WACnB,EAAKP,SAAS,CAAEH,cAAe,M,EAGjCW,YAAc,SAACC,GACb,OAAQA,EAASC,QACf,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAS,GAAnB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAASE,KAAK,SAAxB,iBACF,QACE,MAAM,GAAN,OAAUF,EAASG,MAAM,GAAI,GAAGD,KAAK,MAArC,gBAAkDF,EAASA,EAASC,OAAS,GAA7E,mB,4CAIN,WAA2B,IAAD,OAChBb,EAAkBgB,KAAKjB,MAAvBC,cAER,OACE,sBAAKiB,UAAU,MAAf,UACE,6BAAKD,KAAKL,YAAYX,KACrBA,EAAca,OAAS,GACtB,wBACEK,KAAK,SACLC,QAASH,KAAKN,mBAFhB,mBAOF,oBAAIO,UAAU,OAAd,SACGpB,EAAgBuB,KAAI,SAAAlB,GACnB,IACMmB,EADarB,EAAcS,SAASP,GACb,SAAW,SAExC,OACE,+BAGE,+BAAOA,IACP,wBACEgB,KAAK,SACLC,QAAS,kBAAM,EAAKX,eAAeN,IAFrC,SAIGmB,MAPEnB,e,GAjEHoB,IAAMC,WAmFTzB,ICpGf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91cdccc5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGoods = (good: string) => {\n    this.setState(((prevState: State) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    })));\n  };\n\n  removeGoods = (good: string) => {\n    this.setState(((prevState: State) => ({\n      selectedGoods: prevState.selectedGoods.filter(restOfgoods => (\n        restOfgoods !== good)),\n    }\n    )));\n  };\n\n  selectOrRemove = (good: string) => {\n    const isSelected = this.state.selectedGoods.includes(good);\n\n    return isSelected\n      ? this.removeGoods(good)\n      : this.selectGoods(good);\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  createTitle = (allGoods: string[]) => {\n    switch (allGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${allGoods[0]} is selected`;\n      case 2:\n        return `${allGoods.join(' and ')} are selected`;\n      default:\n        return `${allGoods.slice(0, -1).join(', ')} and ${allGoods[allGoods.length - 1]} are selected`;\n    }\n  };\n\n  render(): React.ReactNode {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.createTitle(selectedGoods)}</h1>\n        {selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            onClick={this.clearSelectedGoods}\n          >\n            Clear\n          </button>\n        )}\n        <ul className=\"mt-5\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.includes(good);\n            const btnText = isSelected ? 'Remove' : 'Select';\n\n            return (\n              <li\n                key={good}\n              >\n                <span>{good}</span>\n                <button\n                  type=\"button\"\n                  onClick={() => this.selectOrRemove(good)}\n                >\n                  {btnText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}